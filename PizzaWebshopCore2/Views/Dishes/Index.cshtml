@model PizzaWebshopCore2.Models.Dishes.IndexViewModel
<div class="container">
    <div class="row">
        <h1>Pizzas</h1>
        <div style="overflow-y: scroll; max-height: 70vh;" class="col s12 m7 l8">

            @foreach (var dish in Model.Dishes)
            {

                <div style="opacity: 0.9" class="card blue-grey darken-1">
                    <div class="card-content white-text">
                        <span class="card-title">@dish.Name</span>
                        @foreach (var ingredient in dish.Ingredients)
                        {
                            <span>@ingredient.Name</span>
                        }
                    </div>
                    <div class="card-action">
                        <button value="@dish.Name" class="waves-effect waves-light btn addToCart"><i class="material-icons left">add</i>Add</button>

                    </div>
                </div>
            }
        </div>
        <div class="col s12 m5 l4">
            <div style="opacity: 0.9">
                <button id="btn-checkout" class="waves-effect waves-light btn disabled"><i class="material-icons right">checkout</i>Checkout</button>
                <div class="collection" id="cart"></div>
               
            </div>
        </div>
    </div>
</div>


    

<style>
    .added-dish:hover {
        cursor: pointer;
    }
    .collection {
        border: 0;
    }
</style>
<script type="text/javascript">

    cartHandler = {
       cartItems: function() {
           var items = document.getElementsByClassName('added-dish');
           var itemsArr = [];
           for (var i = 0; i < items.length; i++) {
               var pizza = {
                   Name: items[i].getAttribute('id'),
                   Count: items[i].children[0].innerText
               }
               itemsArr.push(pizza);
           }
           return itemsArr;
       },
       init: function (cart, addableDishes) {
            this.cart = cart;
            this.addableDishes = addableDishes;
            cartHandler.hookAddEvents();
       },
        cart: {},
        addableDishes: {},
        hookAddEvents: function() {
            for (var i = 0; i < this.addableDishes.length; i++) {
                this.addableDishes[i].addEventListener('click',
                    function () {
                        var dish = this.value;
                        cartHandler.addToCart(dish);
                    });
            }
        },
        updateDishCount: function (dish) {
            var dishToUpdate = document.getElementById(dish);
            dishToUpdate.children[0].innerText++;
           
        },
       createNewDish: function(dish) {
           var a = document.createElement('a');

           a.setAttribute('id', dish);
           a.classList.add('collection-item');
           a.classList.add('added-dish');

           var span = document.createElement('span');
           span.classList.add('badge');
           span.appendChild(document.createTextNode("1"));

           a.appendChild(span);
           a.appendChild(document.createTextNode(dish));

           a.addEventListener('click',
               function () {
                   cartHandler.removeItemFromCart(this);
               });

           this.cart.appendChild(a);
       },
        addToCart: function (dish) {

            if (document.getElementById(dish)) {
                cartHandler.updateDishCount(dish);

            } else {
                cartHandler.createNewDish(dish);
            }

            document.getElementById('btn-checkout').classList.remove('disabled');

        },
        removeItemFromCart: function (element) {
            cartHandler.cartItems();
            var dishCount = element.children[0].innerText;
            if (dishCount <= 1) {
                element.parentNode.removeChild(element);
            } else {
                element.children[0].innerText--;
            }
        
        
            if (!document.getElementsByClassName('added-dish').length) {
                document.getElementById('btn-checkout').classList.add('disabled');
            }
        
        }
    }
    
    cartHandler.init(document.getElementById('cart'), document.getElementsByClassName('addToCart'));
   
    //var addToCart = function (dish, cart) {

    //    if (document.getElementById(dish)) {
    //    var dishToUpdate = document.getElementById(dish);

    //    var dishCount = dishToUpdate.children[0].innerText;
    //    if (dishCount <= 0) {
    //        dishCount = 2;
    //    } else {
    //        dishCount++;
    //    }
    //    dishToUpdate.children[0].innerText = dishCount;

    //    } else {
    //    var a = document.createElement('a');

    //    a.setAttribute('id', dish);
    //    a.classList.add('collection-item');
    //    a.classList.add('added-dish');
    //    var span = document.createElement('span');
    //    span.classList.add('badge');
    //    a.appendChild(span);
    //    a.appendChild(document.createTextNode(dish));

    //    a.addEventListener('click',
    //        function () {
    //            removeItemFromCart(this);
    //        });

    //        cart.appendChild(a);
    //    }

    //   document.getElementById('btn-checkout').classList.remove('disabled');

    //};
  

    //var removeItemFromCart = function (element) {
        
    //    var dishCount = element.children[0].innerText;
    //    if (dishCount <= 1) {
    //        element.parentNode.removeChild(element);
    //    } else {
    //        element.children[0].innerText--;
    //    }
        
        
    //    if (!document.getElementsByClassName('added-dish').length) {
    //        document.getElementById('btn-checkout').classList.add('disabled');
    //    }
        
    //}
</script>