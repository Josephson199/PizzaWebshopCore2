@using System.Linq
@using Microsoft.AspNetCore.Identity
@using PizzaWebshopCore2.Models
@model PizzaWebshopCore2.Models.Dishes.IndexViewModel
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<div class="container">
    <div class="row">
        <h1>Pizzas</h1>
        <div style="overflow-y: scroll; height: 70vh;" class="col s12 m7 l8">

            @foreach (var dish in Model.Dishes)
            {

                <div style="opacity: 0.9" class="card blue-grey darken-1">
                    <div class="card-content white-text">
                        <span class="card-title">@dish.Name</span>
                        <span class="right">@dish.Category.Name</span>
                        <div id="@dish.Id-ingredients">
                            @foreach (var ingredient in Model.Ingredients)
                            {
                                <p style="display: inline;">
                                    @if (dish.Ingredients.Any(i => i.Id == ingredient.Id))
                                    {
                                        <input value="@ingredient.Id" class="filled-in ingredient-checkbox" type="checkbox" checked="checked" id="@ingredient.Id-@dish.Id" />
                                    }
                                    else
                                    {
                                        <input value="@ingredient.Id" class="filled-in ingredient-checkbox" type="checkbox" id="@ingredient.Id-@dish.Id" />
                                    }
                                    <label for="@ingredient.Id-@dish.Id">@ingredient.Name</label>
                                </p>

                            }
                        </div>
                    </div>
                   
                    <div class="card-action">
                        <button value="@dish.Id" name="@dish.Name" class="waves-effect waves-light btn addToCart"><i class="material-icons left">add</i>Add</button>
                        <span id="@dish.Name-price" class="right">@dish.Price sek</span>

                    </div>
                </div>
            }
            <div style="opacity: 0.9" class="card blue-grey darken-1">
                <div class="card-content white-text">
                    <span class="card-title">Custom Pizza</span>
                    <div id="custom-dish">
                        @foreach (var ingredient in Model.Ingredients)
                        {
                            <p style="display: inline;">
                                <input value="@ingredient.Id" class="filled-in ingredient-checkbox" type="checkbox" id="@ingredient.Id-custom-ingredient"/>
                                <label for="@ingredient.Id-custom-ingredient">@ingredient.Name</label>
                            </p>

                        }
                    
                    </div>
                    
                    
                </div>
                <div class="card-action">
                    <button id="add-custom-dish-btn" value="custom" class="waves-effect waves-light btn"><i class="material-icons left">add</i>Add</button>
                    <span class="right"></span>
                </div>
            </div>
        </div>
        <div class="col s12 m5 l4">
            <div style="opacity: 0.9">
                <a href="#modal-checkout" id="btn-checkout" class="waves-effect waves-light btn disabled modal-trigger"><i class="material-icons right">checkout</i>Checkout</a>
                <span style="padding: 5px; border-radius: 4px;" class="white">PRICE<span id="total-price"></span></span>
                <div class="collection" id="cart"></div>

            </div>
        </div>
    </div>
</div>


<div id="modal-checkout" class="modal">
    <div class="modal-content">
        <h4>Checkout</h4>
        <div class="row">
            @if (SignInManager.IsSignedIn(User))
            {
               
                var user = await UserManager.GetUserAsync(User);
               
                    <form id="authorized-submit-form" class="col s12">
                        <div class="row">
                            <div class="input-field col s12">
                                <input value="@user.Street" asp-for="PaymentInformationModel.Street" id="street" type="text" class="validate" required="required">
                                <label for="street">Street</label>
                            </div>
                        </div>
                        <div class="row">
                            <div class="input-field col s6">
                                <input value="@user.City" asp-for="PaymentInformationModel.City" id="city" type="text" class="validate" required="required">
                                <label for="city">City</label>
                            </div>
                            <div class="input-field col s6">
                                <input value="@user.PostalCode" asp-for="PaymentInformationModel.PostalCode" id="postal_code" type="text" class="validate" required="required">
                                <label for="postal_code">Postal Code</label>
                            </div>
                        </div>
                        <div class="row">
                            <div class="input-field col s12">
                                <input asp-for="PaymentInformationModel.CardNumber" id="card_number" type="text" class="validate" required="required">
                                <label for="card_number">Card Number</label>
                            </div>
                        </div>
                        <button id="submit-authorized-form" class="waves-effect waves-light btn" type="submit">Order</button>
                    </form>
                

              
               
                
            }
            else
            {
                <form id="unauthorized-sumbit-form" class="col s12">
                    <div class="row">
                        <div class="input-field col s6">
                            <input asp-for="PaymentInformationModel.FirstName" id="first_name" type="text" class="validate">
                            <label for="first_name">First Name</label>
                        </div>
                        <div class="input-field col s6">
                            <input asp-for="PaymentInformationModel.LastName" id="last_name" type="text" class="validate">
                            <label for="last_name">Last Name</label>
                        </div>
                    </div>
                    <div class="row">
                        <div class="input-field col s12">
                            <input asp-for="PaymentInformationModel.Email" id="email" type="email" class="validate">
                            <label for="email">Email</label>
                        </div>
                    </div>
                    <div class="row">
                        <div class="input-field col s12">
                            <input asp-for="PaymentInformationModel.Street" id="street" type="text" class="validate">
                            <label for="street">Street</label>
                        </div>
                    </div>
                    <div class="row">
                        <div class="input-field col s6">
                            <input asp-for="PaymentInformationModel.City" id="city" type="text" class="validate">
                            <label for="city">City</label>
                        </div>
                        <div class="input-field col s6">
                            <input asp-for="PaymentInformationModel.PostalCode" id="postal_code" type="text" class="validate">
                            <label for="postal_code">Postal Code</label>
                        </div>
                    </div>
                    <div class="row">
                        <div class="input-field col s12">
                            <input asp-for="PaymentInformationModel.CardNumber" id="card_number" type="number" class="validate">
                            <label for="card_number">Card Number</label>
                        </div>
                    </div>
                    <button class="waves-effect waves-light btn" type="submit">Order</button>
                </form>
            }
         
        </div>
        
    </div>
    <div class="modal-footer">
        <a href="#!" class="modal-action modal-close waves-effect waves-green btn-flat">Close</a>
    </div>
</div>
          
<style>
    .added-dish:hover {
        cursor: pointer;
    }
    .collection {
        border: 0;
    }
    .ingred-name-italic {
        font-style: italic;
        font-size: 65% !important;
    }
</style>

<script type="text/javascript">


    cartHandler = {
        init: function() {
            cartHandler.hookEvents();
            cartHandler.initCart();
        },
        initCart: function() {
            $.ajax({
                type: 'GET',
                url: 'dishes/get-cart',
                contentType: "application/json",
                success: function (data) {
                    if (data.dishes) {
                        data.dishes.forEach(function(dish) {
                            cartHandler.appendToCart(dish);

                        });
                        cartHandler.updateCartPrice(data.cartPrice);
                    }
                }
            });
        },
        config: {
            availableDishes: $('.addToCart'),
            customDish: $('#add-custom-dish-btn'),
            cartContainer: $('#cart'),
            totalPriceContainer: $('#total-price'),
            btnCheckout: $('#btn-checkout'),
            cart: $('#cart')
        },
        hookEvents: function() {
            cartHandler.config.availableDishes.on('click', function() {
                cartHandler.addDishToSession(this);
            });
            cartHandler.config.customDish.on('click', function() {
                cartHandler.addCustomDishToSession();
            });
        },
        addDishToSession: function (el) {
            var ingredientIds = new Array();
            $('#' + el.value +'-ingredients input:checked').each(function() {
                ingredientIds.push(parseInt(this.value));
            });
            if (ingredientIds.length <= 0) {
                return;
            }
            $.ajax({
                type: 'POST',
                url: 'dishes/add-dish-to-session',
                data: JSON.stringify({ dishId: el.value, ingredientIds: ingredientIds}),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    cartHandler.updateCartPrice(data.cartPrice);
                    cartHandler.appendToCart(data.dish);
                    
                }
            });

        },
        addCustomDishToSession: function () {
            var ingredients = document.querySelectorAll('#custom-dish input[type="checkbox"]:checked');
            if (!ingredients.length) {
                return false;
            }
            var ingredientIds = new Array();
            ingredients.forEach(function (i) {
                ingredientIds.push(parseInt(i.value));

            });

            $.ajax({
                type: 'POST',
                url: 'dishes/add-custom-dish-to-session',
                data: JSON.stringify(ingredientIds),
                contentType: "application/json",
                success: function (data) {
                    cartHandler.appendToCart(data.dish);
                    cartHandler.updateCartPrice(data.cartPrice);
                }
            });
        },
        appendToCart: function (dish) {
            var a = document.createElement('a');
            
            a.setAttribute('id', dish.id + '_dishId');
            a.classList.add('collection-item');
            a.classList.add('added-dish');

            var span = document.createElement('span');
            span.classList.add('badge');
            span.classList.add('ingred-name-italic');

            var ingredrients = [];
            dish.ingredients.forEach(function(ingredient) {
                ingredrients.push(ingredient.name);
            });
            span.appendChild(document.createTextNode(ingredrients.join()));


            a.addEventListener('click',
                function () {
                    cartHandler.removeItemFromCart(this);
                });
            a.appendChild(span);
            a.appendChild(document.createTextNode(dish.name));
            cartHandler.config.cartContainer.append(a);
        },
        updateDishCount(dish) {
            var dishToUpdate = $('#' + dish.id + '_dishId');

            var currentCount = dishToUpdate.children().first().text();
            currentCount++;
            dishToUpdate.children().first().text(currentCount);
        },
        updateCartPrice: function (cartPrice) {
            if (cartPrice > 0) {
                cartHandler.config.btnCheckout.removeClass('disabled');
            }
            cartHandler.config.totalPriceContainer.text(cartPrice);

        },
        removeItemFromCart: function (el) {
            var dishId = $(el).attr('id');
            var divider = dishId.indexOf('_');
            var dishIdPure = dishId.substring(0, divider);

            cartHandler.removeItemFromSession(dishIdPure);

            $(el).remove();

            if (cartHandler.config.cart.children().length <= 0) {
                cartHandler.config.btnCheckout.addClass('disabled');
            }
        },
        removeItemFromSession: function (dishId) {
            $('.added-dish').addClass('disabled');
            $.ajax({
                type: 'POST',
                url: 'dishes/remove-dish-from-cart-session',
                data: dishId,
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    cartHandler.updateCartPrice(data.cartPrice);
                    $('.added-dish').removeClass('disabled');
                }
            });
        }

    }


    $(document).ready(function() {
        cartHandler.init();
        $('.modal').modal();


        $('#authorized-submit-form').submit(function(evt) {
            evt.preventDefault();
           var data = {
               street: $('#street').val(),
               city: $('#city').val(),
               postalCode: $('#postal_code').val(),
               cardNumber: $('#card_number').val()
            }

           $.ajax({
                type: 'POST',
                url: 'dishes/save-order-authorized',
                data: JSON.stringify(data),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    window.location.replace('/home/index?ordercomplete=true');
                }
           });
        });

        $('#unauthorized-sumbit-form').submit(function(evt) {
            evt.preventDefault();
            var data = {
                firstName: $('#first_name').val(),
                lastName: $('#last_name').val(),
                email: $('#email').val(),
                street: $('#street').val(),
                city: $('#city').val(),
                postalCode: $('#postal_code').val(),
                cardNumber: $('#card_number').val()
            }

            $.ajax({
                type: 'POST',
                url: 'dishes/save-order-unauthorized',
                data: JSON.stringify(data),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    window.location.replace('/home/index?ordercomplete=true');
                }
            });
        });

    });

</script>