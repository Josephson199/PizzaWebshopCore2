
@using Microsoft.AspNetCore.Mvc
@model PizzaWebshopCore2.Models.Dishes.IndexViewModel
<div class="container">
    <div class="row">
        <h1>Pizzas</h1>
        <div style="overflow-y: scroll; max-height: 70vh;" class="col s12 m7 l8">

            @foreach (var dish in Model.Dishes)
            {

                <div style="opacity: 0.9" class="card blue-grey darken-1">
                    <div class="card-content white-text">
                        <span class="card-title">@dish.Name</span>
                        @foreach (var ingredient in dish.Ingredients)
                        {
                            <span>@ingredient.Name</span>
                        }
                    </div>
                    <div class="card-action">
                        <button value="@dish.Id" name="@dish.Name" class="waves-effect waves-light btn addToCart"><i class="material-icons left">add</i>Add</button>
                        <span id="@dish.Name-price" class="right">@dish.Price sek</span>

                    </div>
                </div>
            }
            <div style="opacity: 0.9" class="card blue-grey darken-1">
                <div class="card-content white-text">
                    <span class="card-title">Custom Pizza</span>
                    <div id="custom-dish">
                        @foreach (var ingredient in Model.Ingredients)
                        {
                            <p style="display: inline;">
                                <input id="@ingredient.Name-price" hidden value="@ingredient.Price"/>
                                <input value="@ingredient.Name" class="filled-in ingredient-checkbox" type="checkbox" id="@ingredient.Id"/>
                                <label for="@ingredient.Id">@ingredient.Name</label>
                            </p>

                        }
                    
                    </div>
                    
                    
                </div>
                <div class="card-action">
                    <button id="add-custom-dish-btn" value="custom" class="waves-effect waves-light btn"><i class="material-icons left">add</i>Add</button>
                    <span class="right"></span>
                </div>
            </div>
        </div>
        <div class="col s12 m5 l4">
            <div style="opacity: 0.9">
                <button id="btn-checkout" class="waves-effect waves-light btn disabled"><i class="material-icons right">checkout</i>Checkout</button>
                <span style="padding: 5px; border-radius: 4px;" class="white">PRICE<span id="total-price"></span></span>
                <div class="collection" id="cart"></div>
               
            </div>
        </div>
    </div>
</div>


    

<style>
    .added-dish:hover {
        cursor: pointer;
    }
    .collection {
        border: 0;
    }
</style>
<script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-3.2.1.min.js"></script>
<script type="text/javascript">
    

   
    cartHandlerOld = {
        totalPrice: function () {
            var res = 0;
            cartHandler.cartItemsObjects.forEach(function(item) {
                res += item.price;
            });
            return res;
        },
        cartItemsObjects: [],
        cartItems: function() {
            var dishes = document.getElementsByClassName('added-dish');
            
            var dishArr = [];
            for (var i = 0; i < dishes.length; i++) {
                var dish = { name: "", count: "", ingredients: [] };
                
                var name = dishes[i].getAttribute('id');
                if (!name) {
                    dish.name = "Custom";
                    var ingredients = dishes[i].children[0].innerText.split(',');
                    for (var j = 0; j < ingredients.length; j++) {
                        var ingredient = { name: ingredients[j] }
                        dish.ingredients.push(ingredient);
                    }
                     
                  
                } else {
                    dish.name = name;
                    dish.count = dishes[i].children[0].innerText;

                }
                dishArr.push(dish);
            }
            var order = { dishes: dishArr }
            
            return order;
        },
        init: function (cart, addableDishes) {
            this.cart = cart;
            this.addableDishes = addableDishes;
            cartHandler.hookAddEvents();
            cartHandler.hookCheckoutEvent();
        },
        checkout: function () {
            var orderJson = cartHandler.cartItems();
            $.ajax({
                type: 'POST',
                url: '/dishes/checkout',
                data: JSON.stringify(orderJson),
                contentType: "application/json; charset=utf-8"
            });
        },
        hookCheckoutEvent: function() {
            document.getElementById('btn-checkout').addEventListener('click', function() {
                cartHandler.checkout();
            });
        },
        cart: {},
        addableDishes: {},
        hookAddEvents: function() {
            for (var i = 0; i < this.addableDishes.length; i++) {
                this.addableDishes[i].addEventListener('click',
                    function () {
                        cartHandler.addToCart(this);
                    });
            }
        },
        updateDishCount: function (element) {
            
            var dishToUpdate = document.getElementById(element.value + "-dish");
            dishToUpdate.children[0].innerText++;
            var price = document.getElementById(element.name + '-price').innerText.split(' ')[0];
            price = parseInt(price);
            var dishObj = {id: element.value, name: element.value, price: price };
            this.cartItemsObjects.push(dishObj);
            
            return true;
        },
        createNewDish: function (element) {
            var a = document.createElement('a');
            
            a.setAttribute('id', element.value + '-dish');
            a.classList.add('collection-item');
            a.classList.add('added-dish');

            var span = document.createElement('span');
            span.classList.add('badge');
            span.appendChild(document.createTextNode("1"));

            a.appendChild(span);
            a.appendChild(document.createTextNode(element.name));

            a.addEventListener('click',
                function () {
                    cartHandler.removeItemFromCart(this);
                });

            this.cart.appendChild(a);
            var price = document.getElementById(element.name + '-price').innerText.split(' ')[0];
            price = parseInt(price);
            var dishObj = {id: element.value, name: element.name, price: price };
            this.cartItemsObjects.push(dishObj);
           
            return true;
        },
        addCustomDish: function () {
            var ingredients = document.querySelectorAll('#custom-dish input[type="checkbox"]:checked');
            if (!ingredients.length) {
                return false;
            }
            var ingredientsArr = [];
            ingredients.forEach(function(i) {
                ingredientsArr.push(i.value);
            });

            var totalPrice = 0;
            var ingredientsObjArr = [];
            ingredientsArr.forEach(function(i) {
                var price = document.getElementById(i + '-price').value;
                
                totalPrice += parseInt(price);

                var ingredientObj = { name: i, price: parseInt(price) };
                ingredientsObjArr.push(ingredientObj);

            });
            var dishId = new Date().getTime();
            var dish = {id: dishId, name: 'Custom', price: totalPrice, ingredients: ingredientsObjArr };
            this.cartItemsObjects.push(dish);
            
            var a = document.createElement('a');
            var span = document.createElement('span');
            
            a.classList.add('collection-item');
            a.classList.add('added-dish');
            span.classList.add('badge');
            span.appendChild(document.createTextNode(ingredientsArr.join()));
            a.appendChild(span);
            a.setAttribute('id', dishId + '-dish');
            a.appendChild(document.createTextNode('Custom'));
            a.addEventListener('click',
                function () {
                    cartHandler.removeItemFromCart(this);
                });

            this.cart.appendChild(a);



            return true;
        },
        addToCart: function (element) {
            console.log(element);
            var res;
            if (element.value === "custom") {
                res = cartHandler.addCustomDish();
                
            }
            else if (document.getElementById(element.value + '-dish')) {
                res = cartHandler.updateDishCount(element);

            } else {
                res = cartHandler.createNewDish(element);
            }

            if(res)
                document.getElementById('btn-checkout').classList.remove('disabled');

            document.getElementById('total-price').innerText = cartHandler.totalPrice();

        },
        removeItemFromCart: function (element) {
           
            var dishCount = element.children[0].innerText;
            
            if (element.innerText.indexOf('Custom') !== -1) {
                element.parentNode.removeChild(element);
            }
            else if (dishCount <= 1) {
                element.parentNode.removeChild(element);
            } else {
                element.children[0].innerText--;
            }
          
            if (!document.getElementsByClassName('added-dish').length) {
                document.getElementById('btn-checkout').classList.add('disabled');
            }
            
            for (var i = 0; i < cartHandler.cartItemsObjects.length; i++) {
                
                if (cartHandler.cartItemsObjects[i].id + '-dish' === element.id) {
                    cartHandler.cartItemsObjects.splice(i, 1);
                    break;
                }
            }
            document.getElementById('total-price').innerText = cartHandler.totalPrice();
        
        }

    }
    
    //cartHandler.init(document.getElementById('cart'), document.getElementsByClassName('addToCart'));

    cartHandler = {
        init: function() {
            cartHandler.hookAddEvents();
        },
        config: {
            availableDishes: $('.addToCart'),
            customDish: $('#add-custom-dish-btn'),
            cartContainer: $('#cart'),
            totalPriceContainer: $('#total-price')
        },
        hookAddEvents: function() {
            cartHandler.config.availableDishes.on('click', function() {
                //addDishToCart(el);
               cartHandler.addDishToSession(this);
            });
            cartHandler.config.customDish.on('click', function() {
                cartHandler.addCustomDishToSession();
            });
        },
        addDishToSession: function (el) {
           
            $.ajax({
                type: 'POST',
                url: 'dishes/add-dish-to-session',
                data: el.value,
                contentType: "application/json; charset=utf-8",
                success: function (dish) {
                    cartHandler.appendToCart(dish);
                }
            });

            
        },
        addCustomDishToSession: function () {
            var ingredients = document.querySelectorAll('#custom-dish input[type="checkbox"]:checked');
            if (!ingredients.length) {
                return false;
            }
            var ingredientIds = new Array();
            ingredients.forEach(function (i) {
                ingredientIds.push(parseInt(i.id));
                
            });
            
            $.ajax({
                type: 'POST',
                url: 'dishes/add-custom-dish-to-session',
                data: JSON.stringify(ingredientIds),
                contentType: "application/json",
                success: function (dish) {
                    cartHandler.appendToCart(dish);
                }
            });
        },
        appendToCart: function (dish) {
            if ($('#' + dish.id + '_dishId').length) {
                cartHandler.updateDishCount(dish);
            } else {
                var a = document.createElement('a');
            
                a.setAttribute('id', dish.id + '_dishId');
                a.classList.add('collection-item');
                a.classList.add('added-dish');

                var span = document.createElement('span');
                span.classList.add('badge');
                span.appendChild(document.createTextNode("1"));

                a.appendChild(span);
                a.appendChild(document.createTextNode(dish.name));
                cartHandler.config.cartContainer.append(a);
            }
          
            
        },
        updateDishCount(dish) {
            var dishToUpdate = $('#' + dish.id + '_dishId');
            
            //dishToUpdate.children[0].innerText++;
            var currentCount = dishToUpdate.children().first().text();
            currentCount++;
            dishToUpdate.children().first().text(currentCount);

            
        },
        updateSessionWithExistingDish: function (dish) {

            //$.ajax({
            //    type: 'POST',
            //    url: 'dishes/add-dish-to-session',
            //    data: dish.id,
            //    contentType: "application/json; charset=utf-8",
            //    success: function (dish) {
                    
            //    }
            //});
        }
       
    }

    cartHandler.init();

</script>