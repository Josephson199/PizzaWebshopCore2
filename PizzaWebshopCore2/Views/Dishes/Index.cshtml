
@using Microsoft.AspNetCore.Mvc
@model PizzaWebshopCore2.Models.Dishes.IndexViewModel
<div class="container">
    <div class="row">
        <h1>Pizzas</h1>
        <div style="overflow-y: scroll; max-height: 70vh;" class="col s12 m7 l8">

            @foreach (var dish in Model.Dishes)
            {

                <div style="opacity: 0.9" class="card blue-grey darken-1">
                    <div class="card-content white-text">
                        <span class="card-title">@dish.Name</span>
                        @foreach (var ingredient in dish.Ingredients)
                        {
                            <span>@ingredient.Name</span>
                        }
                    </div>
                    <div class="card-action">
                        <button value="@dish.Id" name="@dish.Name" class="waves-effect waves-light btn addToCart"><i class="material-icons left">add</i>Add</button>
                        <span id="@dish.Name-price" class="right">@dish.Price sek</span>

                    </div>
                </div>
            }
            <div style="opacity: 0.9" class="card blue-grey darken-1">
                <div class="card-content white-text">
                    <span class="card-title">Custom Pizza</span>
                    <div id="custom-dish">
                        @foreach (var ingredient in Model.Ingredients)
                        {
                            <p style="display: inline;">
                                <input id="@ingredient.Name-price" hidden value="@ingredient.Price"/>
                                <input value="@ingredient.Name" class="filled-in ingredient-checkbox" type="checkbox" id="@ingredient.Id"/>
                                <label for="@ingredient.Id">@ingredient.Name</label>
                            </p>

                        }
                    
                    </div>
                    
                    
                </div>
                <div class="card-action">
                    <button id="add-custom-dish-btn" value="custom" class="waves-effect waves-light btn"><i class="material-icons left">add</i>Add</button>
                    <span class="right"></span>
                </div>
            </div>
        </div>
        <div class="col s12 m5 l4">
            <div style="opacity: 0.9">
                <button id="btn-checkout" class="waves-effect waves-light btn disabled"><i class="material-icons right">checkout</i>Checkout</button>
                <span style="padding: 5px; border-radius: 4px;" class="white">PRICE<span id="total-price"></span></span>
                <div class="collection" id="cart"></div>
               
            </div>
        </div>
    </div>
</div>


    

<style>
    .added-dish:hover {
        cursor: pointer;
    }
    .collection {
        border: 0;
    }
</style>
<script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-3.2.1.min.js"></script>
<script type="text/javascript">
    

    cartHandler = {
        init: function() {
            cartHandler.hookAddEvents();
            cartHandler.initCart();
        },
        initCart: function() {
            $.ajax({
                type: 'GET',
                url: 'dishes/get-cart',
                contentType: "application/json",
                success: function (data) {
                    if (data.dishes) {
                        data.dishes.forEach(function(dish) {
                            cartHandler.appendToCart(dish);
                        
                        });
                        cartHandler.updateCartPrice(data.cartPrice);
                    }
                }
            });
        },
        config: {
            availableDishes: $('.addToCart'),
            customDish: $('#add-custom-dish-btn'),
            cartContainer: $('#cart'),
            totalPriceContainer: $('#total-price'),
            btnCheckout: $('#btn-checkout'),
            cart: $('#cart')
        },
        hookAddEvents: function() {
            cartHandler.config.availableDishes.on('click', function() {
               cartHandler.addDishToSession(this);
            });
            cartHandler.config.customDish.on('click', function() {
                cartHandler.addCustomDishToSession();
            });
        },
        addDishToSession: function (el) {
           
            $.ajax({
                type: 'POST',
                url: 'dishes/add-dish-to-session',
                data: el.value,
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    cartHandler.appendToCart(data.dish);
                    cartHandler.updateCartPrice(data.cartPrice);
                }
            });
            
        },
        addCustomDishToSession: function () {
            var ingredients = document.querySelectorAll('#custom-dish input[type="checkbox"]:checked');
            if (!ingredients.length) {
                return false;
            }
            var ingredientIds = new Array();
            ingredients.forEach(function (i) {
                ingredientIds.push(parseInt(i.id));
                
            });
            
            $.ajax({
                type: 'POST',
                url: 'dishes/add-custom-dish-to-session',
                data: JSON.stringify(ingredientIds),
                contentType: "application/json",
                success: function (data) {
                    cartHandler.appendToCart(data.dish);
                    cartHandler.updateCartPrice(data.cartPrice);
                }
            });
        },
        appendToCart: function (dish) {

             if ($('#' + dish.id + '_dishId').length) {
                cartHandler.updateDishCount(dish);
                
            } else {

                var a = document.createElement('a');
            
                a.setAttribute('id', dish.id + '_dishId');
                a.classList.add('collection-item');
                a.classList.add('added-dish');

                var span = document.createElement('span');
                span.classList.add('badge');
                if (dish.name === "Custom") {
                    var ingredrients = [];
                    dish.ingredients.forEach(function(ingredient) {
                        ingredrients.push(ingredient.name);
                    });
                    span.appendChild(document.createTextNode(ingredrients.join()));
                } else {
                    span.appendChild(document.createTextNode("1"));
                }
                
                a.addEventListener('click',
                     function () {
                         cartHandler.removeItemFromCart(this);
                     });
                a.appendChild(span);
                a.appendChild(document.createTextNode(dish.name));
                cartHandler.config.cartContainer.append(a);
            }
          
            
        },
        updateDishCount(dish) {
            var dishToUpdate = $('#' + dish.id + '_dishId');
            
            var currentCount = dishToUpdate.children().first().text();
            currentCount++;
            dishToUpdate.children().first().text(currentCount);
        },
        updateCartPrice: function (cartPrice) {
            if (cartPrice > 0) {
                cartHandler.config.btnCheckout.removeClass('disabled');
            }
            cartHandler.config.totalPriceContainer.text(cartPrice);
            
        },
        removeItemFromCart: function (el) {
            var dishId = $(el).attr('id');
            var divider = dishId.indexOf('_');
            var dishIdPure = dishId.substring(0, divider);

            cartHandler.removeItemFromSession(dishIdPure);

            var dishCount = $(el).children().first().text();

            if ($(el).text().indexOf('Custom') !== -1 || dishCount <= 1) {
                $(el).remove();
            } else {
                $(el).children().first().text(parseInt(dishCount) -1);
            }

            if (cartHandler.config.cart.children().length <= 0) {
                cartHandler.config.btnCheckout.addClass('disabled');
            }
        },
        removeItemFromSession: function (dishId) {
            
            $.ajax({
                type: 'POST',
                url: 'dishes/remove-dish-from-cart-session',
                data: dishId,
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    cartHandler.updateCartPrice(data.cartPrice);
                }
            });
        },
        checkout: function() {
            
        }
       
    }

    cartHandler.init();

</script>